name: Multi-Platform Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  deployments: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            executable: AugmentVIP.exe
            output_name: Windows.exe
          - os: macos-latest
            platform: macos
            executable: AugmentVIP
            output_name: macOS
          - os: ubuntu-latest
            platform: linux
            executable: AugmentVIP
            output_name: Linux

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pyinstaller>=5.0 PySide6>=6.0 psutil click
    
    - name: Build Windows
      if: matrix.platform == 'windows'
      run: |
        pyinstaller --clean --noconfirm --onefile --windowed --name AugmentVIP --add-data "src;src" --hidden-import PySide6.QtCore --hidden-import PySide6.QtGui --hidden-import PySide6.QtWidgets --hidden-import psutil --hidden-import click main.py
    
    - name: Build macOS/Linux
      if: matrix.platform != 'windows'
      run: |
        pyinstaller --clean --noconfirm --onefile --windowed --name AugmentVIP --add-data "src:src" --hidden-import PySide6.QtCore --hidden-import PySide6.QtGui --hidden-import PySide6.QtWidgets --hidden-import psutil --hidden-import click main.py
    
    - name: Prepare release file
      run: |
        mkdir -p release
        cp "dist/${{ matrix.executable }}" "release/${{ matrix.output_name }}"
      shell: bash
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build
        path: release/${{ matrix.output_name }}
    
    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: release/${{ matrix.output_name }}
        generate_release_notes: true
